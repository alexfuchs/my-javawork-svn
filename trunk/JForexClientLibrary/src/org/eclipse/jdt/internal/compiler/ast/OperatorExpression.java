/*      */ package org.eclipse.jdt.internal.compiler.ast;
/*      */ 
/*      */ import org.eclipse.jdt.internal.compiler.flow.FlowInfo;
/*      */ import org.eclipse.jdt.internal.compiler.util.Util;
/*      */ 
/*      */ public abstract class OperatorExpression extends Expression
/*      */   implements OperatorIds
/*      */ {
/*   19 */   public static int[][] OperatorSignatures = new int[20][];
/*      */ 
/*   21 */   static { classInitialize();
/*      */   }
/*      */ 
/*      */   public static final void classInitialize()
/*      */   {
/*   30 */     OperatorSignatures[2] = get_AND();
/*   31 */     OperatorSignatures[0] = get_AND_AND();
/*   32 */     OperatorSignatures[9] = get_DIVIDE();
/*   33 */     OperatorSignatures[18] = get_EQUAL_EQUAL();
/*   34 */     OperatorSignatures[6] = get_GREATER();
/*   35 */     OperatorSignatures[7] = get_GREATER_EQUAL();
/*   36 */     OperatorSignatures[10] = get_LEFT_SHIFT();
/*   37 */     OperatorSignatures[4] = get_LESS();
/*   38 */     OperatorSignatures[5] = get_LESS_EQUAL();
/*   39 */     OperatorSignatures[13] = get_MINUS();
/*   40 */     OperatorSignatures[15] = get_MULTIPLY();
/*   41 */     OperatorSignatures[3] = get_OR();
/*   42 */     OperatorSignatures[1] = get_OR_OR();
/*   43 */     OperatorSignatures[14] = get_PLUS();
/*   44 */     OperatorSignatures[16] = get_REMAINDER();
/*   45 */     OperatorSignatures[17] = get_RIGHT_SHIFT();
/*   46 */     OperatorSignatures[19] = get_UNSIGNED_RIGHT_SHIFT();
/*   47 */     OperatorSignatures[8] = get_XOR();
/*      */   }
/*      */ 
/*      */   public static final String generateTableTestCase()
/*      */   {
/*   59 */     int[] operators = { 2, 0, 9, 6, 7, 
/*   60 */       10, 4, 5, 13, 15, 3, 1, 14, 16, 
/*   61 */       17, 19, 8 };
/*      */ 
/*  120 */     1.Decode decode = new 1.Decode();
/*      */ 
/*  123 */     String s = "\tpublic static void binaryOperationTablesTestCase(){\n\t\t//TC test : all binary operation (described in tables)\n\t\t//method automatically generated by\n\t\t//org.eclipse.jdt.internal.compiler.ast.OperatorExpression.generateTableTestCase();\n\t\tString str0;\t String str\t= " + 
/*  129 */       decode.constant(11) + ";\n" + 
/*  130 */       "\t\tint i0;\t int i\t= " + decode.constant(10) + ";\n" + 
/*  131 */       "\t\tboolean z0;\t boolean z\t= " + decode.constant(5) + ";\n" + 
/*  132 */       "\t\tchar c0; \t char  c\t= " + decode.constant(2) + ";\n" + 
/*  133 */       "\t\tfloat f0; \t float f\t= " + decode.constant(9) + ";\n" + 
/*  134 */       "\t\tdouble d0;\t double d\t= " + decode.constant(8) + ";\n" + 
/*  135 */       "\t\tbyte b0; \t byte b\t= " + decode.constant(3) + ";\n" + 
/*  136 */       "\t\tshort s0; \t short s\t= " + decode.constant(4) + ";\n" + 
/*  137 */       "\t\tlong l0; \t long l\t= " + decode.constant(7) + ";\n" + 
/*  138 */       "\t\tObject obj0; \t Object obj\t= " + decode.constant(1) + ";\n" + 
/*  139 */       "\n";
/*      */ 
/*  141 */     int error = 0;
/*  142 */     for (int i = 0; i < operators.length; i++) {
/*  143 */       int operator = operators[i];
/*  144 */       for (int left = 0; left < 16; left++) {
/*  145 */         for (int right = 0; right < 16; right++) {
/*  146 */           int result = OperatorSignatures[operator][((left << 4) + right)] & 0xF;
/*  147 */           if (result == 0)
/*      */           {
/*      */             continue;
/*      */           }
/*      */ 
/*  155 */           s = s + "\t\t" + decode.type(result) + "0" + " = " + decode.type(left);
/*  156 */           s = s + " " + decode.operator(operator) + " " + decode.type(right) + ";\n";
/*  157 */           String begin = result == 11 ? "\t\tif (! " : "\t\tif ( ";
/*  158 */           String test = result == 11 ? ".equals(" : " != (";
/*  159 */           s = s + begin + decode.type(result) + "0" + test + 
/*  160 */             decode.constant(left) + " " + 
/*  161 */             decode.operator(operator) + " " + 
/*  162 */             decode.constant(right) + "))\n";
/*  163 */           error++; s = s + "\t\t\tSystem.out.println(" + error + ");\n";
/*      */         }
/*      */       }
/*      */ 
/*      */     }
/*      */ 
/*  169 */     return s += "\n\t\tSystem.out.println(\"binary tables test : done\");}";
/*      */   }
/*      */ 
/*      */   public static final int[] get_AND()
/*      */   {
/*  179 */     int[] table = new int[256];
/*      */ 
/*  196 */     table[51] = 670266;
/*  197 */     table[55] = 472951;
/*  198 */     table[52] = 670282;
/*      */ 
/*  205 */     table[50] = 670250;
/*  206 */     table[58] = 670378;
/*      */ 
/*  210 */     table[115] = 489271;
/*  211 */     table[119] = 489335;
/*  212 */     table[116] = 489287;
/*      */ 
/*  219 */     table[114] = 489255;
/*  220 */     table[122] = 489383;
/*      */ 
/*  224 */     table[67] = 674362;
/*  225 */     table[71] = 477047;
/*  226 */     table[68] = 674378;
/*      */ 
/*  233 */     table[66] = 674346;
/*  234 */     table[74] = 674474;
/*      */ 
/*  316 */     table[85] = 349525;
/*      */ 
/*  322 */     table[35] = 666170;
/*  323 */     table[39] = 468855;
/*  324 */     table[36] = 666186;
/*      */ 
/*  331 */     table[34] = 666154;
/*  332 */     table[42] = 666282;
/*      */ 
/*  336 */     table['£'] = 698938;
/*  337 */     table['§'] = 501623;
/*  338 */     table['¤'] = 698954;
/*      */ 
/*  345 */     table['¢'] = 698922;
/*  346 */     table['ª'] = 699050;
/*      */ 
/*  363 */     return table;
/*      */   }
/*      */ 
/*      */   public static final int[] get_AND_AND()
/*      */   {
/*  373 */     int[] table = new int[256];
/*      */ 
/*  510 */     table[85] = 349525;
/*      */ 
/*  556 */     return table;
/*      */   }
/*      */ 
/*      */   public static final int[] get_DIVIDE()
/*      */   {
/*  569 */     return get_MINUS();
/*      */   }
/*      */ 
/*      */   public static final int[] get_EQUAL_EQUAL()
/*      */   {
/*  579 */     int[] table = new int[256];
/*      */ 
/*  596 */     table[51] = 670261;
/*  597 */     table[55] = 472949;
/*  598 */     table[52] = 670277;
/*      */ 
/*  602 */     table[56] = 538757;
/*  603 */     table[57] = 604565;
/*      */ 
/*  605 */     table[50] = 670245;
/*  606 */     table[58] = 670373;
/*      */ 
/*  610 */     table[115] = 489269;
/*  611 */     table[119] = 489333;
/*  612 */     table[116] = 489285;
/*      */ 
/*  616 */     table[120] = 555141;
/*  617 */     table[121] = 620949;
/*      */ 
/*  619 */     table[114] = 489253;
/*  620 */     table[122] = 489381;
/*      */ 
/*  624 */     table[67] = 674357;
/*  625 */     table[71] = 477045;
/*  626 */     table[68] = 674373;
/*      */ 
/*  630 */     table[72] = 542853;
/*  631 */     table[73] = 608661;
/*      */ 
/*  633 */     table[66] = 674341;
/*  634 */     table[74] = 674469;
/*      */ 
/*  656 */     table['»'] = 
/*  657 */       111029;
/*  658 */     table['±'] = 
/*  659 */       110869;
/*      */ 
/*  665 */     table['¼'] = 
/*  666 */       111045;
/*      */ 
/*  673 */     table[27] = 
/*  674 */       70069;
/*  675 */     table[17] = 
/*  676 */       69909;
/*      */ 
/*  682 */     table[28] = 
/*  683 */       70085;
/*      */ 
/*  686 */     table[''] = 559157;
/*  687 */     table[''] = 559221;
/*  688 */     table[''] = 559173;
/*      */ 
/*  692 */     table[''] = 559237;
/*  693 */     table[''] = 559253;
/*      */ 
/*  695 */     table[''] = 559141;
/*  696 */     table[''] = 559269;
/*      */ 
/*  700 */     table[''] = 629045;
/*  701 */     table[''] = 629109;
/*  702 */     table[''] = 629061;
/*      */ 
/*  706 */     table[''] = 563333;
/*  707 */     table[''] = 629141;
/*      */ 
/*  709 */     table[''] = 629029;
/*  710 */     table[''] = 629157;
/*      */ 
/*  722 */     table[85] = 349525;
/*      */ 
/*  728 */     table[35] = 666165;
/*  729 */     table[39] = 468853;
/*  730 */     table[36] = 666181;
/*      */ 
/*  734 */     table[40] = 534661;
/*  735 */     table[41] = 600469;
/*      */ 
/*  737 */     table[34] = 666149;
/*  738 */     table[42] = 666277;
/*      */ 
/*  742 */     table['£'] = 698933;
/*  743 */     table['§'] = 501621;
/*  744 */     table['¤'] = 698949;
/*      */ 
/*  748 */     table['¨'] = 567429;
/*  749 */     table['©'] = 633237;
/*      */ 
/*  751 */     table['¢'] = 698917;
/*  752 */     table['ª'] = 699045;
/*      */ 
/*  760 */     table['Ë'] = 
/*  761 */       115125;
/*  762 */     table['Á'] = 
/*  763 */       114965;
/*      */ 
/*  769 */     table['Ì'] = 
/*  770 */       115141;
/*  771 */     return table;
/*      */   }
/*      */ 
/*      */   public static final int[] get_GREATER()
/*      */   {
/*  782 */     return get_LESS();
/*      */   }
/*      */ 
/*      */   public static final int[] get_GREATER_EQUAL()
/*      */   {
/*  793 */     return get_LESS();
/*      */   }
/*      */ 
/*      */   public static final int[] get_LEFT_SHIFT()
/*      */   {
/*  803 */     int[] table = new int[256];
/*      */ 
/*  820 */     table[51] = 670266;
/*  821 */     table[55] = 670330;
/*  822 */     table[52] = 670282;
/*      */ 
/*  829 */     table[50] = 670250;
/*  830 */     table[58] = 670378;
/*      */ 
/*  834 */     table[115] = 490039;
/*  835 */     table[119] = 490103;
/*  836 */     table[116] = 490055;
/*      */ 
/*  843 */     table[114] = 490023;
/*  844 */     table[122] = 490151;
/*      */ 
/*  848 */     table[67] = 674362;
/*  849 */     table[71] = 674426;
/*  850 */     table[68] = 674378;
/*      */ 
/*  857 */     table[66] = 674346;
/*  858 */     table[74] = 674474;
/*      */ 
/*  946 */     table[35] = 666170;
/*  947 */     table[39] = 666234;
/*  948 */     table[36] = 666186;
/*      */ 
/*  955 */     table[34] = 666154;
/*  956 */     table[42] = 666282;
/*      */ 
/*  960 */     table['£'] = 698938;
/*  961 */     table['§'] = 699002;
/*  962 */     table['¤'] = 698954;
/*      */ 
/*  969 */     table['¢'] = 698922;
/*  970 */     table['ª'] = 699050;
/*      */ 
/*  987 */     return table;
/*      */   }
/*      */ 
/*      */   public static final int[] get_LESS()
/*      */   {
/*  997 */     int[] table = new int[256];
/*      */ 
/* 1014 */     table[51] = 670261;
/* 1015 */     table[55] = 472949;
/* 1016 */     table[52] = 670277;
/*      */ 
/* 1020 */     table[56] = 538757;
/* 1021 */     table[57] = 604565;
/*      */ 
/* 1023 */     table[50] = 670245;
/* 1024 */     table[58] = 670373;
/*      */ 
/* 1028 */     table[115] = 489269;
/* 1029 */     table[119] = 489333;
/* 1030 */     table[116] = 489285;
/*      */ 
/* 1034 */     table[120] = 555141;
/* 1035 */     table[121] = 620949;
/*      */ 
/* 1037 */     table[114] = 489253;
/* 1038 */     table[122] = 489381;
/*      */ 
/* 1042 */     table[67] = 674357;
/* 1043 */     table[71] = 477045;
/* 1044 */     table[68] = 674373;
/*      */ 
/* 1048 */     table[72] = 542853;
/* 1049 */     table[73] = 608661;
/*      */ 
/* 1051 */     table[66] = 674341;
/* 1052 */     table[74] = 674469;
/*      */ 
/* 1098 */     table[''] = 559157;
/* 1099 */     table[''] = 559221;
/* 1100 */     table[''] = 559173;
/*      */ 
/* 1104 */     table[''] = 559237;
/* 1105 */     table[''] = 559253;
/*      */ 
/* 1107 */     table[''] = 559141;
/* 1108 */     table[''] = 559269;
/*      */ 
/* 1112 */     table[''] = 629045;
/* 1113 */     table[''] = 629109;
/* 1114 */     table[''] = 629061;
/*      */ 
/* 1118 */     table[''] = 563333;
/* 1119 */     table[''] = 629141;
/*      */ 
/* 1121 */     table[''] = 629029;
/* 1122 */     table[''] = 629157;
/*      */ 
/* 1140 */     table[35] = 666165;
/* 1141 */     table[39] = 468853;
/* 1142 */     table[36] = 666181;
/*      */ 
/* 1146 */     table[40] = 534661;
/* 1147 */     table[41] = 600469;
/*      */ 
/* 1149 */     table[34] = 666149;
/* 1150 */     table[42] = 666277;
/*      */ 
/* 1154 */     table['£'] = 698933;
/* 1155 */     table['§'] = 501621;
/* 1156 */     table['¤'] = 698949;
/*      */ 
/* 1160 */     table['¨'] = 567429;
/* 1161 */     table['©'] = 633237;
/*      */ 
/* 1163 */     table['¢'] = 698917;
/* 1164 */     table['ª'] = 699045;
/*      */ 
/* 1181 */     return table;
/*      */   }
/*      */ 
/*      */   public static final int[] get_LESS_EQUAL()
/*      */   {
/* 1192 */     return get_LESS();
/*      */   }
/*      */ 
/*      */   public static final int[] get_MINUS()
/*      */   {
/* 1202 */     int[] table = (int[])get_PLUS().clone();
/*      */ 
/* 1205 */     table['³'] = 0;
/* 1206 */     table['·'] = 0;
/* 1207 */     table['´'] = 0;
/* 1208 */     table['¶'] = 0;
/* 1209 */     table['»'] = 0;
/* 1210 */     table['±'] = 0;
/* 1211 */     table['¸'] = 0;
/* 1212 */     table['¹'] = 0;
/* 1213 */     table['µ'] = 0;
/* 1214 */     table['²'] = 0;
/* 1215 */     table['º'] = 0;
/* 1216 */     table['¼'] = 0;
/*      */ 
/* 1218 */     table[59] = 0;
/* 1219 */     table[123] = 0;
/* 1220 */     table[75] = 0;
/* 1221 */     table[107] = 0;
/* 1222 */     table[27] = 0;
/* 1223 */     table[''] = 0;
/* 1224 */     table[''] = 0;
/* 1225 */     table[91] = 0;
/* 1226 */     table[43] = 0;
/* 1227 */     table['«'] = 0;
/* 1228 */     table['Ë'] = 0;
/*      */ 
/* 1230 */     table['Ì'] = 0;
/*      */ 
/* 1232 */     return table;
/*      */   }
/*      */ 
/*      */   public static final int[] get_MULTIPLY()
/*      */   {
/* 1243 */     return get_MINUS();
/*      */   }
/*      */ 
/*      */   public static final int[] get_OR()
/*      */   {
/* 1255 */     return get_AND();
/*      */   }
/*      */ 
/*      */   public static final int[] get_OR_OR()
/*      */   {
/* 1266 */     return get_AND_AND();
/*      */   }
/*      */ 
/*      */   public static final int[] get_PLUS()
/*      */   {
/* 1276 */     int[] table = new int[256];
/*      */ 
/* 1293 */     table[51] = 670266;
/* 1294 */     table[55] = 472951;
/* 1295 */     table[52] = 670282;
/*      */ 
/* 1297 */     table[59] = 211899;
/*      */ 
/* 1299 */     table[56] = 538760;
/* 1300 */     table[57] = 604569;
/*      */ 
/* 1302 */     table[50] = 670250;
/* 1303 */     table[58] = 670378;
/*      */ 
/* 1307 */     table[115] = 489271;
/* 1308 */     table[119] = 489335;
/* 1309 */     table[116] = 489287;
/*      */ 
/* 1311 */     table[123] = 490427;
/*      */ 
/* 1313 */     table[120] = 555144;
/* 1314 */     table[121] = 620953;
/*      */ 
/* 1316 */     table[114] = 489255;
/* 1317 */     table[122] = 489383;
/*      */ 
/* 1321 */     table[67] = 674362;
/* 1322 */     table[71] = 477047;
/* 1323 */     table[68] = 674378;
/*      */ 
/* 1325 */     table[75] = 281531;
/*      */ 
/* 1327 */     table[72] = 542856;
/* 1328 */     table[73] = 608665;
/*      */ 
/* 1330 */     table[66] = 674346;
/* 1331 */     table[74] = 674474;
/*      */ 
/* 1349 */     table['³'] = 766779;
/* 1350 */     table['·'] = 767867;
/* 1351 */     table['´'] = 767051;
/*      */ 
/* 1353 */     table['»'] = 768955;
/* 1354 */     table['±'] = 766235;
/* 1355 */     table['¸'] = 768139;
/* 1356 */     table['¹'] = 768411;
/* 1357 */     table['µ'] = 767323;
/* 1358 */     table['²'] = 766507;
/* 1359 */     table['º'] = 768683;
/* 1360 */     table['¼'] = 769227;
/*      */ 
/* 1367 */     table[27] = 72635;
/*      */ 
/* 1377 */     table[''] = 559160;
/* 1378 */     table[''] = 559224;
/* 1379 */     table[''] = 559176;
/*      */ 
/* 1381 */     table[''] = 560059;
/*      */ 
/* 1383 */     table[''] = 559240;
/* 1384 */     table[''] = 559256;
/*      */ 
/* 1386 */     table[''] = 559144;
/* 1387 */     table[''] = 559272;
/*      */ 
/* 1391 */     table[''] = 629049;
/* 1392 */     table[''] = 629113;
/* 1393 */     table[''] = 629065;
/*      */ 
/* 1395 */     table[''] = 629691;
/*      */ 
/* 1397 */     table[''] = 563336;
/* 1398 */     table[''] = 629145;
/*      */ 
/* 1400 */     table[''] = 629033;
/* 1401 */     table[''] = 629161;
/*      */ 
/* 1409 */     table[91] = 351163;
/*      */ 
/* 1419 */     table[35] = 666170;
/* 1420 */     table[39] = 468855;
/* 1421 */     table[36] = 666186;
/*      */ 
/* 1423 */     table[43] = 142267;
/*      */ 
/* 1425 */     table[40] = 534664;
/* 1426 */     table[41] = 600473;
/*      */ 
/* 1428 */     table[34] = 666154;
/* 1429 */     table[42] = 666282;
/*      */ 
/* 1433 */     table['£'] = 698938;
/* 1434 */     table['§'] = 501623;
/* 1435 */     table['¤'] = 698954;
/*      */ 
/* 1437 */     table['«'] = 699323;
/*      */ 
/* 1439 */     table['¨'] = 567432;
/* 1440 */     table['©'] = 633241;
/*      */ 
/* 1442 */     table['¢'] = 698922;
/* 1443 */     table['ª'] = 699050;
/*      */ 
/* 1451 */     table['Ë'] = 838587;
/*      */ 
/* 1460 */     return table;
/*      */   }
/*      */ 
/*      */   public static final int[] get_REMAINDER()
/*      */   {
/* 1471 */     return get_MINUS();
/*      */   }
/*      */ 
/*      */   public static final int[] get_RIGHT_SHIFT()
/*      */   {
/* 1482 */     return get_LEFT_SHIFT();
/*      */   }
/*      */ 
/*      */   public static final int[] get_UNSIGNED_RIGHT_SHIFT()
/*      */   {
/* 1493 */     return get_LEFT_SHIFT();
/*      */   }
/*      */ 
/*      */   public static final int[] get_XOR()
/*      */   {
/* 1504 */     return get_AND();
/*      */   }
/*      */ 
/*      */   public String operatorToString() {
/* 1508 */     switch ((this.bits & 0xFC0) >> 6) {
/*      */     case 18:
/* 1510 */       return "==";
/*      */     case 5:
/* 1512 */       return "<=";
/*      */     case 7:
/* 1514 */       return ">=";
/*      */     case 29:
/* 1516 */       return "!=";
/*      */     case 10:
/* 1518 */       return "<<";
/*      */     case 17:
/* 1520 */       return ">>";
/*      */     case 19:
/* 1522 */       return ">>>";
/*      */     case 1:
/* 1524 */       return "||";
/*      */     case 0:
/* 1526 */       return "&&";
/*      */     case 14:
/* 1528 */       return "+";
/*      */     case 13:
/* 1530 */       return "-";
/*      */     case 11:
/* 1532 */       return "!";
/*      */     case 16:
/* 1534 */       return "%";
/*      */     case 8:
/* 1536 */       return "^";
/*      */     case 2:
/* 1538 */       return "&";
/*      */     case 15:
/* 1540 */       return "*";
/*      */     case 3:
/* 1542 */       return "|";
/*      */     case 12:
/* 1544 */       return "~";
/*      */     case 9:
/* 1546 */       return "/";
/*      */     case 6:
/* 1548 */       return ">";
/*      */     case 4:
/* 1550 */       return "<";
/*      */     case 23:
/* 1552 */       return "?:";
/*      */     case 30:
/* 1554 */       return "=";
/*      */     case 20:
/*      */     case 21:
/*      */     case 22:
/*      */     case 24:
/*      */     case 25:
/*      */     case 26:
/*      */     case 27:
/* 1556 */     case 28: } return "unknown operator";
/*      */   }
/*      */ 
/*      */   public int nullStatus(FlowInfo flowInfo) {
/* 1560 */     return -1;
/*      */   }
/*      */ 
/*      */   public StringBuffer printExpression(int indent, StringBuffer output)
/*      */   {
/* 1565 */     output.append('(');
/* 1566 */     return printExpressionNoParenthesis(0, output).append(')');
/*      */   }
/*      */ 
/*      */   public abstract StringBuffer printExpressionNoParenthesis(int paramInt, StringBuffer paramStringBuffer);
/*      */ 
/*      */   class 1$Decode
/*      */   {
/*      */     public final String constant(int code)
/*      */     {
/*   65 */       switch (code) { case 5:
/*   66 */         return "true";
/*      */       case 3:
/*   67 */         return "((byte) 3)";
/*      */       case 2:
/*   68 */         return "'A'";
/*      */       case 8:
/*   69 */         return "300.0d";
/*      */       case 9:
/*   70 */         return "100.0f";
/*      */       case 10:
/*   71 */         return "1";
/*      */       case 7:
/*   72 */         return "7L";
/*      */       case 11:
/*   73 */         return "\"hello-world\"";
/*      */       case 12:
/*   74 */         return "null";
/*      */       case 4:
/*   75 */         return "((short) 5)";
/*      */       case 1:
/*   76 */         return "null";
/*   77 */       case 6: } return Util.EMPTY_STRING;
/*      */     }
/*      */     public final String type(int code) {
/*   80 */       switch (code) { case 5:
/*   81 */         return "z";
/*      */       case 3:
/*   82 */         return "b";
/*      */       case 2:
/*   83 */         return "c";
/*      */       case 8:
/*   84 */         return "d";
/*      */       case 9:
/*   85 */         return "f";
/*      */       case 10:
/*   86 */         return "i";
/*      */       case 7:
/*   87 */         return "l";
/*      */       case 11:
/*   88 */         return "str";
/*      */       case 12:
/*   89 */         return "null";
/*      */       case 4:
/*   90 */         return "s";
/*      */       case 1:
/*   91 */         return "obj";
/*   92 */       case 6: } return "xxx";
/*      */     }
/*      */     public final String operator(int operator) {
/*   95 */       switch (operator) { case 18:
/*   96 */         return "==";
/*      */       case 5:
/*   97 */         return "<=";
/*      */       case 7:
/*   98 */         return ">=";
/*      */       case 10:
/*   99 */         return "<<";
/*      */       case 17:
/*  100 */         return ">>";
/*      */       case 19:
/*  101 */         return ">>>";
/*      */       case 1:
/*  102 */         return "||";
/*      */       case 0:
/*  103 */         return "&&";
/*      */       case 14:
/*  104 */         return "+";
/*      */       case 13:
/*  105 */         return "-";
/*      */       case 11:
/*  106 */         return "!";
/*      */       case 16:
/*  107 */         return "%";
/*      */       case 8:
/*  108 */         return "^";
/*      */       case 2:
/*  109 */         return "&";
/*      */       case 15:
/*  110 */         return "*";
/*      */       case 3:
/*  111 */         return "|";
/*      */       case 12:
/*  112 */         return "~";
/*      */       case 9:
/*  113 */         return "/";
/*      */       case 6:
/*  114 */         return ">";
/*      */       case 4:
/*  115 */         return "<"; }
/*  116 */       return "????";
/*      */     }
/*      */   }
/*      */ }

/* Location:           G:\javawork\JForexClientLibrary\libs\ecj-3.5.2.jar
 * Qualified Name:     org.eclipse.jdt.internal.compiler.ast.OperatorExpression
 * JD-Core Version:    0.6.0
 */